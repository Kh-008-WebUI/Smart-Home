// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DevicesSection Snapshot capturing Snapshot of DevicesSection 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <section
    className="device-list"
>
    <h1
        className="device-list__title"
    >
        Your devices
    </h1>
    <Connect(ListHeader)
        history={undefined}
        location={undefined}
        match={undefined}
        quantity={undefined}
    />
    <section
        className="device-list__content"
    />
    <Popup
        header="Confirm the action"
        popupShown={undefined}
        setPopupShown={undefined}
        text="Are you sure you want to remove the device?"
    >
        <Button
            className="btn popup__btn"
            innerText="Ok"
            okHandler={[Function]}
            setPopupShown={undefined}
        />
        <Button
            className="btn btn--default popup__btn"
            innerText="Cancel"
            okHandler={[Function]}
        />
    </Popup>
    <Message
        clearStatus={undefined}
        header="Error"
    />
</section>,
  "nodes": Array [
    <section
      className="device-list"
>
      <h1
            className="device-list__title"
      >
            Your devices
      </h1>
      <Connect(ListHeader)
            history={undefined}
            location={undefined}
            match={undefined}
            quantity={undefined}
      />
      <section
            className="device-list__content"
      />
      <Popup
            header="Confirm the action"
            popupShown={undefined}
            setPopupShown={undefined}
            text="Are you sure you want to remove the device?"
      >
            <Button
                  className="btn popup__btn"
                  innerText="Ok"
                  okHandler={[Function]}
                  setPopupShown={undefined}
            />
            <Button
                  className="btn btn--default popup__btn"
                  innerText="Cancel"
                  okHandler={[Function]}
            />
      </Popup>
      <Message
            clearStatus={undefined}
            header="Error"
      />
</section>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <DevicesSection
        store={
                Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": DevicesSection {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <section
          className="device-list"
>
          <h1
                    className="device-list__title"
          >
                    Your devices
          </h1>
          <Connect(ListHeader)
                    history={undefined}
                    location={undefined}
                    match={undefined}
                    quantity={undefined}
          />
          <section
                    className="device-list__content"
          />
          <Popup
                    header="Confirm the action"
                    popupShown={undefined}
                    setPopupShown={undefined}
                    text="Are you sure you want to remove the device?"
          >
                    <Button
                              className="btn popup__btn"
                              innerText="Ok"
                              okHandler={[Function]}
                              setPopupShown={undefined}
                    />
                    <Button
                              className="btn btn--default popup__btn"
                              innerText="Cancel"
                              okHandler={[Function]}
                    />
          </Popup>
          <Message
                    clearStatus={undefined}
                    header="Error"
          />
</section>,
        "_debugID": 2,
        "_renderedOutput": <section
          className="device-list"
>
          <h1
                    className="device-list__title"
          >
                    Your devices
          </h1>
          <Connect(ListHeader)
                    history={undefined}
                    location={undefined}
                    match={undefined}
                    quantity={undefined}
          />
          <section
                    className="device-list__content"
          />
          <Popup
                    header="Confirm the action"
                    popupShown={undefined}
                    setPopupShown={undefined}
                    text="Are you sure you want to remove the device?"
          >
                    <Button
                              className="btn popup__btn"
                              innerText="Ok"
                              okHandler={[Function]}
                              setPopupShown={undefined}
                    />
                    <Button
                              className="btn btn--default popup__btn"
                              innerText="Cancel"
                              okHandler={[Function]}
                    />
          </Popup>
          <Message
                    clearStatus={undefined}
                    header="Error"
          />
</section>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <DevicesSection
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
/>,
}
`;
